# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-06-03 19:42
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('map', '0019_auto_20150715_0022'),
    ]

    operations = [
        migrations.CreateModel(
            name='Massif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('massif', models.CharField(max_length=25, verbose_name='Massif')),
            ],
            options={
                'ordering': ['massif'],
                'verbose_name': 'Massif',
                'verbose_name_plural': 'Massifs',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_name', models.CharField(max_length=50, verbose_name='Trip Name')),
                ('start_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='End date')),
                ('date_published', models.DateTimeField(auto_now_add=True, verbose_name='Date published')),
                ('stage_name', models.ManyToManyField(to='map.Stage', verbose_name='Stages')),
            ],
            options={
                'ordering': ['start_date'],
                'verbose_name': 'Trip',
                'verbose_name_plural': 'Trips',
            },
        ),
        migrations.CreateModel(
            name='TripStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_name', models.CharField(max_length=50, verbose_name='Stage Name')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Date')),
                ('date_published', models.DateTimeField(auto_now_add=True, verbose_name='Date published')),
                ('story', models.TextField(blank=True, max_length=800)),
                ('duration', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Duration (h)')),
                ('distance', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Distance (km)')),
                ('picture_tag', models.ImageField(blank=True, null=True, upload_to='picture/%Y/%m', verbose_name='Picture tag')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('added_by', models.CharField(default='Admin', max_length=50, verbose_name='Added by')),
                ('email_validation', models.BooleanField(verbose_name='Email validation')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail adress')),
                ('massif', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.Massif', verbose_name='Massif')),
            ],
            options={
                'ordering': ['date'],
                'verbose_name': 'Stage',
                'verbose_name_plural': 'Stage',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=25, verbose_name='Type')),
            ],
            options={
                'ordering': ['type'],
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.AddField(
            model_name='tripstage',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.Type', verbose_name='Type'),
        ),
    ]
